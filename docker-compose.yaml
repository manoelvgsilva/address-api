version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 0101
      ZOOKEEPER_TICK_TIME: 6000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9090:9090
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ZOOKEEPER:0101
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092, PLAINTEXT_HOST://localhost:9090
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 4000:4000
    environment:
      KAFKA_BROKERCONNECT: kafka:33033

  mongodb:
    image: mongo:latest
    command: [--auth]
    container_name: addressdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: addressAdmin
      MONGO_INITDB_ROOT_PASSWORD: addressPassword
    ports:
      - 47047:47047
    volumes:
      - mongo-data:/address/db

  springboot-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 47047
      SPRING_DATA_MONGODB_DATABASE: addressdb
    depends_on:
      - mongodb
    ports:
      - 1010:1010

volumes:
  mongo-data:

networks:
  broker-kafka:
    driver: bridge